name: 'Pytest Coverage Comment'
description: 'GitHub Action that adds pytest coverage reports as comments to pull requests with badges, test statistics, and direct file links'
author: 'Misha Kav'
branding:
  icon: 'message-circle'
  color: 'blue'

inputs:
  github-token:
    description: 'GitHub token for API access to create/update comments'
    default: ${{ github.token }}
    required: true

  pytest-coverage-path:
    description: 'Path to pytest text coverage output (from --cov-report=term-missing)'
    default: './pytest-coverage.txt'
    required: false

  issue-number:
    description: 'Pull request number to comment on (required for workflow_dispatch/workflow_run events)'
    default: ''
    required: false

  pytest-xml-coverage-path:
    description: 'Path to XML coverage report (from --cov-report=xml:coverage.xml)'
    default: ''
    required: false

  coverage-path-prefix:
    description: 'Prefix to add to file paths in coverage report links'
    default: ''
    required: false

  title:
    description: 'Main title for the coverage comment (useful for monorepo projects)'
    default: 'Coverage Report'
    required: false

  badge-title:
    description: 'Text shown on the coverage percentage badge'
    default: 'Coverage'
    required: false

  hide-badge:
    description: 'Hide the coverage percentage badge from the comment'
    default: 'false'
    required: false

  hide-report:
    description: 'Hide the detailed coverage table (show only summary and badge)'
    default: 'false'
    required: false

  hide-comment:
    description: 'Skip creating PR comment entirely (useful for using outputs only)'
    default: 'false'
    required: false

  xml-skip-covered:
    description: 'Hide files with 100% coverage from XML coverage reports'
    default: 'false'
    required: false

  report-only-changed-files:
    description: 'Show only files changed in the current pull request'
    default: 'false'
    required: false

  junitxml-path:
    description: 'Path to JUnit XML file for test statistics (passed/failed/skipped)'
    default: ''
    required: false

  junitxml-title:
    description: 'Title for the test summary section from JUnit XML'
    default: ''
    required: false

  create-new-comment:
    description: 'Create new comment on each run instead of updating existing comment'
    default: 'false'
    required: false

  default-branch:
    description: 'Base branch name for file links in coverage report (e.g., main, master)'
    default: 'main'
    required: false

  multiple-files:
    description: >
      Generate single comment with multiple coverage reports (useful for monorepos).
      Format: One report per line as "Title, coverage-path, junit-path".
      Example: "Backend API, ./backend/coverage.txt, ./backend/junit.xml"
    default: ''
    required: false

  remove-link-from-badge:
    description: 'Remove hyperlink from coverage badge (badge becomes plain image)'
    default: 'false'
    required: false

  unique-id-for-comment:
    description: 'Unique identifier for matrix builds to update separate comments (e.g., ${{ matrix.python-version }})'
    default: ''
    required: false

  remove-links-to-files:
    description: 'Remove file links from coverage table to reduce comment size'
    default: 'false'
    required: false

  remove-links-to-lines:
    description: 'Remove line number links from coverage table to reduce comment size'
    default: 'false'
    required: false

outputs:
  coverage:
    description: 'Coverage percentage from pytest report (e.g., 85%)'
  color:
    description: 'Badge color based on coverage percentage (red/orange/yellow/green/brightgreen)'
  coverageHtml:
    description: 'Full HTML coverage report with clickable links to uncovered lines'
  summaryReport:
    description: 'Test summary in markdown format with statistics (tests/skipped/failures/errors/time)'
  warnings:
    description: 'Number of coverage warnings from pytest-cov'
  tests:
    description: 'Total number of tests run (from JUnit XML)'
  skipped:
    description: 'Number of skipped tests (from JUnit XML)'
  failures:
    description: 'Number of failed tests (from JUnit XML)'
  errors:
    description: 'Number of test errors (from JUnit XML)'
  time:
    description: 'Test execution time in seconds (from JUnit XML)'
  notSuccessTestInfo:
    description: 'JSON details of failed, errored, and skipped tests (from JUnit XML)'

runs:
  using: 'node20'
  main: 'dist/index.js'
